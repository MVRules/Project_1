name: Evaluation API (no validations, robust logging)

on:
  repository_dispatch:
    types: [evaluate_submission]

permissions:
  contents: write
  actions: read

jobs:
  api:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout grader repo
        uses: actions/checkout@v4

      # Step 1 — Save payload robustly (creates submission.json even if empty)
      - name: Save submission payload (robust)
        run: |
          payload='${{ toJson(github.event.client_payload) }}'
          if [ -z "$payload" ] || [ "$payload" = "null" ]; then
            echo '{}' > submission.json
            echo "ℹ️ No client_payload found; wrote {} to submission.json"
          else
            echo "$payload" > submission.json
          fi
          # Pretty-print (also validates JSON)
          jq . submission.json

      # Step 2 — Append to repos.jsonl safely (auto-creates the file)
      - name: Append to repos.jsonl (safe)
        run: |
          # Ensure log file exists (create empty if missing)
          [ -f repos.jsonl ] || : > repos.jsonl

          ts=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          # Coerce non-object/null to {} then add timestamp
          jq --arg ts "$ts" '(. // {}) + {timestamp: $ts}' submission.json >> repos.jsonl

          # Show the line we just wrote
          tail -n 1 repos.jsonl | jq .

      # Commit the updated repos.jsonl back to the repo
      - name: Commit repos.jsonl
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "log: accept submission (no validations)"
          file_pattern: repos.jsonl

      - name: Done
        run: echo "✅ Evaluator accepted submission and logged it"
